[{"path":"https://larmarange.github.io/ggcoef/articles/ggcoef_model.html","id":"ggcoef_model","dir":"Articles","previous_headings":"","what":"ggcoef_model()","title":"Plot model coefficients","text":"purpose function quickly plot coefficients model. updated improved version GGally::ggcoef() based broom.helpers::tidy_plus_plus(). displaying nicely formatted table models, look gtsummary::tbl_regression().","code":""},{"path":"https://larmarange.github.io/ggcoef/articles/ggcoef_model.html","id":"quick-coefficients-plot","dir":"Articles","previous_headings":"ggcoef_model()","what":"Quick coefficients plot","title":"Plot model coefficients","text":"work automatically, function requires broom.helpers package. Simply call ggcoef_model() model object. result stats::lm, stats::glm model covered broom.helpers1.  case logistic regression (model coefficients usually exponentiated), simply indicated exponentiate = TRUE. Note logarithmic scale used x-axis.","code":"data(tips, package = \"reshape\") mod_simple <- lm(tip ~ day + time + total_bill, data = tips) ggcoef_model(mod_simple) d_titanic <- as.data.frame(Titanic) d_titanic$Survived <- factor(d_titanic$Survived, c(\"No\", \"Yes\")) mod_titanic <- glm(   Survived ~ Sex * Age + Class,   weights = Freq,   data = d_titanic,   family = binomial ) ggcoef_model(mod_titanic, exponentiate = TRUE)"},{"path":[]},{"path":"https://larmarange.github.io/ggcoef/articles/ggcoef_model.html","id":"variable-labels","dir":"Articles","previous_headings":"ggcoef_model() > Customizing the plot","what":"Variable labels","title":"Plot model coefficients","text":"can use labelled package define variable labels. automatically used ggcoef_model(). Note variable labels defined computing model.  can also define custom variable labels directly passing named vector variable_labels option.  variable labels long, can pass ggplot2::label_wrap_gen() labeller function facet_labeller.  Use facet_row = NULL hide variable names.","code":"library(labelled) tips_labelled <- tips %>%   set_variable_labels(     day = \"Day of the week\",     time = \"Lunch or Dinner\",     total_bill = \"Bill's total\"   ) mod_labelled <- lm(tip ~ day + time + total_bill, data = tips_labelled) ggcoef_model(mod_labelled) ggcoef_model(   mod_simple,   variable_labels = c(     day = \"Week day\",     time = \"Time (lunch or dinner ?)\",     total_bill = \"Total of the bill\"   ) ) ggcoef_model(   mod_simple,   variable_labels = c(     day = \"Week day\",     time = \"Time (lunch or dinner ?)\",     total_bill = \"Total of the bill\"   ),   facet_labeller = ggplot2::label_wrap_gen(10) ) ggcoef_model(mod_simple, facet_row = NULL, colour_guide = TRUE)"},{"path":"https://larmarange.github.io/ggcoef/articles/ggcoef_model.html","id":"term-labels","dir":"Articles","previous_headings":"ggcoef_model() > Customizing the plot","what":"Term labels","title":"Plot model coefficients","text":"Several options allows customize term labels.   default, categorical variables using treatment sum contrasts, reference rows added displayed graph.  Continuous variables polynomial terms defined stats::poly() also properly managed.  Use no_reference_row indicate variables reference row added.","code":"ggcoef_model(mod_titanic, exponentiate = TRUE) ggcoef_model(     mod_titanic,     exponentiate = TRUE,     show_p_values = FALSE,     signif_stars = FALSE,     add_reference_rows = FALSE,     categorical_terms_pattern = \"{level} (ref: {reference_level})\",     interaction_sep = \" x \"   ) +   ggplot2::scale_y_discrete(labels = scales::label_wrap(15)) #> Scale for 'y' is already present. Adding another scale for 'y', which will #> replace the existing scale. mod_titanic2 <- glm(   Survived ~ Sex * Age + Class,   weights = Freq,   data = d_titanic,   family = binomial,   contrasts = list(Sex = contr.sum, Class = contr.treatment(4, base = 3)) ) ggcoef_model(mod_titanic2, exponentiate = TRUE) mod_poly <- lm(Sepal.Length ~ poly(Petal.Width, 3) + Petal.Length, data = iris) ggcoef_model(mod_poly) ggcoef_model(   mod_titanic2, exponentiate = TRUE,   no_reference_row = \"Sex\" ) ggcoef_model(   mod_titanic2, exponentiate = TRUE,   no_reference_row = broom.helpers::all_dichotomous() ) ggcoef_model(   mod_titanic2, exponentiate = TRUE,   no_reference_row = broom.helpers::all_categorical(),   categorical_terms_pattern = \"{level}/{reference_level}\" )"},{"path":"https://larmarange.github.io/ggcoef/articles/ggcoef_model.html","id":"elements-to-display","dir":"Articles","previous_headings":"ggcoef_model() > Customizing the plot","what":"Elements to display","title":"Plot model coefficients","text":"Use intercept = TRUE display intercepts.  can remove confidence intervals conf.int = FALSE.  default, significant terms (.e. p-value 5%) highlighted using two types dots. can control level significance significance remove significance = NULL.  default, dots colored variable. can deactivate behavior colour = NULL.  can display subset terms include.  possible use tidyselect helpers.  can remove stripped rows stripped_rows = FALSE.  hesitate consult help file ggcoef_model() see available options.","code":"ggcoef_model(mod_simple, intercept = TRUE) ggcoef_model(mod_simple, conf.int = FALSE) ggcoef_model(mod_simple, significance = NULL) ggcoef_model(mod_simple, colour = NULL) ggcoef_model(mod_simple, include = c(\"time\", \"total_bill\")) ggcoef_model(mod_simple, include = dplyr::starts_with(\"t\")) ggcoef_model(mod_simple, stripped_rows = FALSE)"},{"path":"https://larmarange.github.io/ggcoef/articles/ggcoef_model.html","id":"ggplot2-elements","dir":"Articles","previous_headings":"ggcoef_model() > Customizing the plot","what":"ggplot2 elements","title":"Plot model coefficients","text":"plot returned ggcoef_model() classic ggplot2 plot. can therefore apply ggplot2 functions .","code":"ggcoef_model(mod_simple) +   ggplot2::xlab(\"Coefficients\") +   ggplot2::ggtitle(\"Custom title\") +   ggplot2::scale_color_brewer(palette = \"Set1\") +   ggplot2::theme(legend.position = \"right\") #> Scale for 'colour' is already present. Adding another scale for 'colour', #> which will replace the existing scale."},{"path":"https://larmarange.github.io/ggcoef/articles/ggcoef_model.html","id":"multinomial-models","dir":"Articles","previous_headings":"ggcoef_model()","what":"Multinomial models","title":"Plot model coefficients","text":"multinomial models, simply use ggcoef_multinom(). Two types visualizations available: \"dodged\" \"faceted\".","code":"library(nnet) mod <- multinom(Species ~ ., data = iris) #> # weights:  18 (10 variable) #> initial  value 164.791843  #> iter  10 value 16.177348 #> iter  20 value 7.111438 #> iter  30 value 6.182999 #> iter  40 value 5.984028 #> iter  50 value 5.961278 #> iter  60 value 5.954900 #> iter  70 value 5.951851 #> iter  80 value 5.950343 #> iter  90 value 5.949904 #> iter 100 value 5.949867 #> final  value 5.949867  #> stopped after 100 iterations ggcoef_multinom(mod, exponentiate = TRUE) ggcoef_multinom(mod, type = \"faceted\") ggcoef_multinom(   mod,   type = \"faceted\",   y.level_label = c(\"versicolor\" = \"versicolor\\n(ref: setosa)\") )"},{"path":"https://larmarange.github.io/ggcoef/articles/ggcoef_model.html","id":"comparing-several-models","dir":"Articles","previous_headings":"ggcoef_model()","what":"Comparing several models","title":"Plot model coefficients","text":"can easily compare several models ggcoef_compare().","code":"mod1 <- lm(Fertility ~ ., data = swiss) mod2 <- step(mod1, trace = 0) mod3 <- lm(Fertility ~ Agriculture + Education * Catholic, data = swiss) models <- list(\"Full model\" = mod1, \"Simplified model\" = mod2, \"With interaction\" = mod3)  ggcoef_compare(models) ggcoef_compare(models, type = \"faceted\")"},{"path":"https://larmarange.github.io/ggcoef/articles/ggcoef_model.html","id":"advanced-users","dir":"Articles","previous_headings":"ggcoef_model()","what":"Advanced users","title":"Plot model coefficients","text":"Advanced users use dataset pass ggcoef_plot(). dataset produced ggcoef_model(), ggcoef_compare() ggcoef_multinom() option return_data = TRUE using broom::tidy() broom.helpers::tidy_plus_plus().","code":""},{"path":"https://larmarange.github.io/ggcoef/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Joseph Larmarange. Author, maintainer.","code":""},{"path":"https://larmarange.github.io/ggcoef/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Larmarange J (2022). ggcoef: Plot Model Coefficients. R package version 0.1.0, https://larmarange.github.io/ggcoef/.","code":"@Manual{,   title = {ggcoef: Plot Model Coefficients},   author = {Joseph Larmarange},   year = {2022},   note = {R package version 0.1.0},   url = {https://larmarange.github.io/ggcoef/}, }"},{"path":"https://larmarange.github.io/ggcoef/index.html","id":"ggcoef","dir":"","previous_headings":"","what":"Plot Model Coefficients","title":"Plot Model Coefficients","text":"ggcoef package provides suite functions plot regression model coefficients (“forest plots”) using ggplot2. suite includes new geometries add alternating background color plot.","code":""},{"path":"https://larmarange.github.io/ggcoef/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Plot Model Coefficients","text":"install development version:","code":"remotes::install_github(\"larmarange/ggcoef\")"},{"path":"https://larmarange.github.io/ggcoef/index.html","id":"a-basic-example","dir":"","previous_headings":"","what":"A basic example","title":"Plot Model Coefficients","text":"","code":"library(ggcoef) #> Le chargement a nécessité le package : ggplot2  data(tips, package = \"reshape\") mod_simple <- lm(tip ~ day + time + total_bill, data = tips) ggcoef_model(mod_simple)"},{"path":"https://larmarange.github.io/ggcoef/index.html","id":"comparing-several-models","dir":"","previous_headings":"","what":"Comparing several models","title":"Plot Model Coefficients","text":"","code":"mod1 <- lm(Fertility ~ ., data = swiss)   mod2 <- step(mod1, trace = 0)   mod3 <- lm(Fertility ~ Agriculture + Education * Catholic, data = swiss)   models <- list(\"Full model\" = mod1, \"Simplified model\" = mod2, \"With interaction\" = mod3)    ggcoef_compare(models) ggcoef_compare(models, type = \"faceted\")"},{"path":"https://larmarange.github.io/ggcoef/reference/geom_stripped_rows.html","id":null,"dir":"Reference","previous_headings":"","what":"Alternating Background Color — geom_stripped_rows","title":"Alternating Background Color — geom_stripped_rows","text":"Add alternating background color along y-axis. geom takes default aesthetics odd even receive color codes.","code":""},{"path":"https://larmarange.github.io/ggcoef/reference/geom_stripped_rows.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Alternating Background Color — geom_stripped_rows","text":"","code":"geom_stripped_rows(   mapping = NULL,   data = NULL,   stat = \"identity\",   position = \"identity\",   ...,   show.legend = NA,   inherit.aes = TRUE,   xfrom = -Inf,   xto = Inf,   width = 1,   nudge_y = 0 )  geom_stripped_cols(   mapping = NULL,   data = NULL,   stat = \"identity\",   position = \"identity\",   ...,   show.legend = NA,   inherit.aes = TRUE,   yfrom = -Inf,   yto = Inf,   width = 1,   nudge_x = 0 )"},{"path":"https://larmarange.github.io/ggcoef/reference/geom_stripped_rows.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Alternating Background Color — geom_stripped_rows","text":"mapping Set aesthetic mappings created aes() aes_(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). stat statistical transformation use data layer, string. position Position adjustment, either string, result call position adjustment function. ... arguments passed layer(). often aesthetics, used set aesthetic fixed value, like colour = \"red\" size = 3. may also parameters paired geom/stat. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders(). xfrom, xto limitation strips along x-axis width width strips yfrom, yto limitation strips along y-axis nudge_x, nudge_y horizontal vertical adjustment nudge strips ","code":""},{"path":"https://larmarange.github.io/ggcoef/reference/geom_stripped_rows.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Alternating Background Color — geom_stripped_rows","text":"","code":"if (FALSE) { # interactive() data(tips, package = \"reshape\") p <- ggplot(tips) +   aes(x = time, y = day) +   geom_count() +   theme_light()  p p + geom_stripped_rows() p + geom_stripped_cols() p + geom_stripped_rows() + geom_stripped_cols()  p <- ggplot(tips) +   aes(x = total_bill, y = day) +   geom_count() +   theme_light() p p + geom_stripped_rows() p + geom_stripped_rows() + scale_y_discrete(expand = expansion(0, 0.5)) p + geom_stripped_rows(xfrom = 10, xto = 35) p + geom_stripped_rows(odd = \"blue\", even = \"yellow\") p + geom_stripped_rows(odd = \"blue\", even = \"yellow\", alpha = .1) p + geom_stripped_rows(odd = \"#00FF0022\", even = \"#FF000022\")  p + geom_stripped_cols() p + geom_stripped_cols(width = 10) p + geom_stripped_cols(width = 10, nudge_x = 5) }"},{"path":"https://larmarange.github.io/ggcoef/reference/ggcoef-package.html","id":null,"dir":"Reference","previous_headings":"","what":"ggcoef: Plot Model Coefficients — ggcoef-package","title":"ggcoef: Plot Model Coefficients — ggcoef-package","text":"Provides suite functions plot regression model coefficients (\"forest plots\") using `ggplot2`. suite includes new geometries add alternating background color plot.","code":""},{"path":[]},{"path":"https://larmarange.github.io/ggcoef/reference/ggcoef-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"ggcoef: Plot Model Coefficients — ggcoef-package","text":"Maintainer: Joseph Larmarange joseph@larmarange.net (ORCID)","code":""},{"path":"https://larmarange.github.io/ggcoef/reference/ggcoef_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot model coefficients — ggcoef_model","title":"Plot model coefficients — ggcoef_model","text":"Plot model coefficients","code":""},{"path":"https://larmarange.github.io/ggcoef/reference/ggcoef_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot model coefficients — ggcoef_model","text":"","code":"ggcoef_model(   model,   tidy_fun = broom.helpers::tidy_with_broom_or_parameters,   conf.int = TRUE,   conf.level = 0.95,   exponentiate = FALSE,   variable_labels = NULL,   term_labels = NULL,   interaction_sep = \" * \",   categorical_terms_pattern = \"{level}\",   add_reference_rows = TRUE,   no_reference_row = NULL,   intercept = FALSE,   include = dplyr::everything(),   significance = 1 - conf.level,   significance_labels = NULL,   show_p_values = TRUE,   signif_stars = TRUE,   return_data = FALSE,   ... )  ggcoef_compare(   models,   type = c(\"dodged\", \"faceted\"),   tidy_fun = broom.helpers::tidy_with_broom_or_parameters,   conf.int = TRUE,   conf.level = 0.95,   exponentiate = FALSE,   variable_labels = NULL,   term_labels = NULL,   interaction_sep = \" * \",   categorical_terms_pattern = \"{level}\",   add_reference_rows = TRUE,   no_reference_row = NULL,   intercept = FALSE,   include = dplyr::everything(),   significance = 1 - conf.level,   significance_labels = NULL,   return_data = FALSE,   ... )  ggcoef_multinom(   model,   type = c(\"dodged\", \"faceted\"),   y.level_label = NULL,   tidy_fun = broom.helpers::tidy_with_broom_or_parameters,   conf.int = TRUE,   conf.level = 0.95,   exponentiate = FALSE,   variable_labels = NULL,   term_labels = NULL,   interaction_sep = \" * \",   categorical_terms_pattern = \"{level}\",   add_reference_rows = TRUE,   no_reference_row = NULL,   intercept = FALSE,   include = dplyr::everything(),   significance = 1 - conf.level,   significance_labels = NULL,   show_p_values = TRUE,   signif_stars = TRUE,   return_data = FALSE,   ... )  ggcoef_plot(   data,   x = \"estimate\",   y = \"label\",   exponentiate = FALSE,   point_size = 2,   point_stroke = 2,   point_fill = \"white\",   colour = NULL,   colour_guide = TRUE,   colour_lab = \"\",   colour_labels = ggplot2::waiver(),   shape = \"significance\",   shape_values = c(16, 21),   shape_guide = TRUE,   shape_lab = \"\",   errorbar = TRUE,   errorbar_height = 0.1,   errorbar_coloured = FALSE,   stripped_rows = TRUE,   strips_odd = \"#11111111\",   strips_even = \"#00000000\",   vline = TRUE,   vline_colour = \"grey50\",   dodged = FALSE,   dodged_width = 0.8,   facet_row = \"var_label\",   facet_col = NULL,   facet_labeller = \"label_value\" )"},{"path":"https://larmarange.github.io/ggcoef/reference/ggcoef_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot model coefficients — ggcoef_model","text":"model regression model object tidy_fun option specify custom tidier function conf.int confidence intervals computed? (see broom::tidy()) conf.level confidence level use confidence interval conf.int = TRUE; must strictly greater 0 less 1; defaults 0.95, corresponds 95 percent confidence interval exponentiate TRUE logarithmic scale used x-axis variable_labels named list named vector custom variable labels term_labels named list named vector custom term labels interaction_sep separator interaction terms categorical_terms_pattern glue pattern labels categorical terms treatment sum contrasts (see model_list_terms_levels()) add_reference_rows reference rows added? no_reference_row variables (accepts tidyselect notation) reference row added, add_reference_rows = TRUE intercept intercept(s) included? include variables include. Accepts tidyselect syntax. Use - remove variable. Default everything(). See also all_continuous(), all_categorical(), all_dichotomous() all_interaction() significance level (0 1) coefficient consider significantly different 0 (1 exponentiate = TRUE), NULL highlighting coefficients significance_labels optional vector custom labels significance variable show_p_values TRUE, add p-value labels signif_stars TRUE, add significant stars labels return_data TRUE, return data.frame used plotting instead plot ... parameters passed ggcoef_plot() models named list models type dodged plot faceted plot? y.level_label optional named vector labeling y.level (see examples) data data frame containing data plotted, typically output ggcoef_model(), ggcoef_compare() ggcoef_multinom() option return_data = TRUE x, y variables mapped x y axis point_size size points point_stroke thickness points point_fill fill colour points colour optional variable name mapped colour aesthetic colour_guide colour guide displayed legend? colour_lab label colour aesthetic legend colour_labels labels argument passed ggplot2::scale_colour_discrete() ggplot2::discrete_scale() shape optional variable name mapped shape aesthetic shape_values values different shapes use ggplot2::scale_shape_manual() shape_guide shape guide displayed legend? shape_lab label shape aesthetic legend errorbar error bars plotted? errorbar_height height error bars errorbar_coloured error bars colored points? stripped_rows stripped rows displayed background? strips_odd color odd rows strips_even color even rows vline vertical line drawn 0 (1 exponentiate = TRUE)? vline_colour colour vertical line dodged points dodged (according colour aesthetic)? dodged_width width value ggplot2::position_dodge() facet_row variable name used row facets facet_col optional variable name used column facets facet_labeller labeller function used labeling facets; labels long, can use ggplot2::label_wrap_gen() (see examples), information documentation ggplot2::facet_grid()","code":""},{"path":"https://larmarange.github.io/ggcoef/reference/ggcoef_model.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot model coefficients — ggcoef_model","text":"ggcoef_model(), ggcoef_multinom() ggcoef_compare() use broom.helpers::tidy_plus_plus() obtain tibble model coefficients, apply additional data transformation pass produced tibble ggcoef_plot() generate plot. control, can use argument return_data = TRUE get produced tibble, apply transformation pass customized tibble ggcoef_plot().","code":""},{"path":"https://larmarange.github.io/ggcoef/reference/ggcoef_model.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Plot model coefficients — ggcoef_model","text":"ggcoef_model(): Redesign GGally::ggcoef() based broom.helpers::tidy_plus_plus(). ggcoef_compare(): Designed displaying several models plot. ggcoef_multinom(): variation ggcoef_model() adapted multinomial logistic regressions performed nnet::multinom(). ggcoef_plot(): DESCRIPTION ","code":""},{"path":"https://larmarange.github.io/ggcoef/reference/ggcoef_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot model coefficients — ggcoef_model","text":"","code":"if (FALSE) { # interactive() data(tips, package = \"reshape\") mod_simple <- lm(tip ~ day + time + total_bill, data = tips) ggcoef_model(mod_simple)  # custom variable labels # you can use the labelled package to define variable labels before computing model if (require(labelled)) {   tips_labelled <- tips %>%     labelled::set_variable_labels(       day = \"Day of the week\",       time = \"Lunch or Dinner\",       total_bill = \"Bill's total\"     )   mod_labelled <- lm(tip ~ day + time + total_bill, data = tips_labelled)   ggcoef_model(mod_labelled) } # you can provide custom variable labels with 'variable_labels' ggcoef_model(   mod_simple,   variable_labels = c(     day = \"Week day\",     time = \"Time (lunch or dinner ?)\",     total_bill = \"Total of the bill\"   ) ) # if labels are too long, you can use 'facet_labeller' to wrap them ggcoef_model(   mod_simple,   variable_labels = c(     day = \"Week day\",     time = \"Time (lunch or dinner ?)\",     total_bill = \"Total of the bill\"   ),   facet_labeller = ggplot2::label_wrap_gen(10) )  # do not display variable facets but add colour guide ggcoef_model(mod_simple, facet_row = NULL, colour_guide = TRUE)  # a logistic regression example d_titanic <- as.data.frame(Titanic) d_titanic$Survived <- factor(d_titanic$Survived, c(\"No\", \"Yes\")) mod_titanic <- glm(   Survived ~ Sex * Age + Class,   weights = Freq,   data = d_titanic,   family = binomial )  # use 'exponentiate = TRUE' to get the Odds Ratio ggcoef_model(mod_titanic, exponentiate = TRUE)  # display intercepts ggcoef_model(mod_titanic, exponentiate = TRUE, intercept = TRUE)  # customize terms labels ggcoef_model(   mod_titanic,   exponentiate = TRUE,   show_p_values = FALSE,   signif_stars = FALSE,   add_reference_rows = FALSE,   categorical_terms_pattern = \"{level} (ref: {reference_level})\",   interaction_sep = \" x \" ) + scale_y_discrete(labels = scales::label_wrap(15))  # display only a subset of terms ggcoef_model(mod_titanic, exponentiate = TRUE, include = c(\"Age\", \"Class\"))  # do not change points' shape based on significance ggcoef_model(mod_titanic, exponentiate = TRUE, significance = NULL)  # a black and white version ggcoef_model(   mod_titanic, exponentiate = TRUE,   colour = NULL, stripped_rows = FALSE )  # show dichotomous terms on one row ggcoef_model(   mod_titanic,   exponentiate = TRUE,   no_reference_row = broom.helpers::all_dichotomous(),   categorical_terms_pattern =     \"{ifelse(dichotomous, paste0(level, ' / ', reference_level), level)}\",   show_p_values = FALSE )  # works also with with polynomial terms mod_poly <- lm(   tip ~ poly(total_bill, 3) + day,   data = tips, ) ggcoef_model(mod_poly)  # or with different type of contrasts # for sum contrasts, the value of the reference term is computed if (require(emmeans)) {  mod2 <- lm(    tip ~ day + time + sex,    data = tips,    contrasts = list(time = contr.sum, day = contr.treatment(4, base = 3))   )   ggcoef_model(mod2) } } if (FALSE) { # interactive()  if (require(broom.helpers)) {   # Use ggcoef_compare() for comparing several models on the same plot   mod1 <- lm(Fertility ~ ., data = swiss)   mod2 <- step(mod1, trace = 0)   mod3 <- lm(Fertility ~ Agriculture + Education * Catholic, data = swiss)   models <- list(\"Full model\" = mod1, \"Simplified model\" = mod2, \"With interaction\" = mod3)    ggcoef_compare(models)   ggcoef_compare(models, type = \"faceted\")    # you can reverse the vertical position of the point by using a negative value   # for dodged_width (but it will produce some warnings)   if (FALSE) {     ggcoef_compare(models, dodged_width = -.9)   } } } if (FALSE) { # interactive()  # specific function for nnet::multinom models if (require(nnet)) {   mod <- multinom(Species ~ ., data = iris)   ggcoef_multinom(mod, exponentiate = TRUE)   ggcoef_multinom(mod, type = \"faceted\")   ggcoef_multinom(     mod,     type = \"faceted\",     y.level_label = c(\"versicolor\" = \"versicolor\\n(ref: setosa)\")   ) } }"},{"path":"https://larmarange.github.io/ggcoef/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://larmarange.github.io/ggcoef/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://larmarange.github.io/ggcoef/reference/signif_stars.html","id":null,"dir":"Reference","previous_headings":"","what":"Significance Stars — signif_stars","title":"Significance Stars — signif_stars","text":"Calculate significance stars","code":""},{"path":"https://larmarange.github.io/ggcoef/reference/signif_stars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Significance Stars — signif_stars","text":"","code":"signif_stars(x, three = 0.001, two = 0.01, one = 0.05, point = 0.1)"},{"path":"https://larmarange.github.io/ggcoef/reference/signif_stars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Significance Stars — signif_stars","text":"x numeric values compared point, one, two, three values three threshold display three stars two threshold display two stars one threshold display one star point threshold display one point (NULL deactivate)","code":""},{"path":"https://larmarange.github.io/ggcoef/reference/signif_stars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Significance Stars — signif_stars","text":"character vector containing appropriate number stars x value","code":""},{"path":"https://larmarange.github.io/ggcoef/reference/signif_stars.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Significance Stars — signif_stars","text":"Joseph Larmarange","code":""},{"path":"https://larmarange.github.io/ggcoef/reference/signif_stars.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Significance Stars — signif_stars","text":"","code":"x <- c(0.5, 0.1, 0.05, 0.01, 0.001) signif_stars(x) #> [1] \"\"    \".\"   \"*\"   \"**\"  \"***\" signif_stars(x, one = .15, point = NULL) #> [1] \"\"    \"*\"   \"*\"   \"**\"  \"***\""},{"path":"https://larmarange.github.io/ggcoef/news/index.html","id":"ggcoef-010","dir":"Changelog","previous_headings":"","what":"ggcoef 0.1.0","title":"ggcoef 0.1.0","text":"First version","code":""}]
