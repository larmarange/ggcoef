% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gglikert.R
\name{gglikert}
\alias{gglikert}
\alias{gglikert_data}
\title{Plotting Likert-type items}
\usage{
gglikert(
  data,
  include,
  sort = c("none", "ascending", "descending"),
  sort_method = c("prop", "mean"),
  sort_prop_include_center = totals_include_center,
  exclude_fill_values = NULL,
  add_labels = TRUE,
  labels_size = 3.5,
  labels_accuracy = 1,
  labels_hide_below = 0.05,
  add_totals = TRUE,
  totals_size = labels_size,
  totals_accuracy = labels_accuracy,
  totals_fontface = "bold",
  totals_include_center = FALSE,
  totals_hjust = 0.1,
  y_reverse = TRUE,
  y_label_wrap = 50,
  reverse_likert = FALSE,
  width = 0.9
)

gglikert_data(
  data,
  include,
  sort = c("none", "ascending", "descending"),
  sort_method = c("prop", "mean"),
  sort_prop_include_center = TRUE,
  exclude_fill_values = NULL
)
}
\arguments{
\item{data}{a data frame}

\item{include}{variables to include, accept \link[dplyr:select]{tidy-select}
syntax}

\item{sort}{should variables be sorted?}

\item{sort_method}{method used to sort the variables: \code{"prop"} sort according
to the proportion of answers higher than the centered level, \code{"mean"}
considers answer as a score and sort according to the mean score}

\item{sort_prop_include_center}{when sorting with \code{"prop"} and if the number
of levels is uneven, should half of the central level be taken into account
to compute the proportion?}

\item{exclude_fill_values}{Vector of values that should not be displayed
(but still taken into account for computing proportions),
see \code{\link[=position_likert]{position_likert()}}}

\item{add_labels}{should percentage labels be added to the plot?}

\item{labels_size}{size of the percentage labels}

\item{labels_accuracy}{accuracy of the percentages, see
\code{\link[scales:label_percent]{scales::label_percent()}}}

\item{labels_hide_below}{if provided, values below will be masked, see
\code{\link[=label_percent_abs]{label_percent_abs()}}}

\item{add_totals}{should the total proportions of negative and positive
answers be added to plot?}

\item{totals_size}{size of total proportions}

\item{totals_accuracy}{accuracy of the total proportions, see
\code{\link[scales:label_percent]{scales::label_percent()}}}

\item{totals_fontface}{font face of the total proportions}

\item{totals_include_center}{if the number of levels is uneven, should half
of the center level be added to the total proportions?}

\item{totals_hjust}{horizontal adjustment of totals labels on the x axis}

\item{y_reverse}{should the y axis be reversed?}

\item{y_label_wrap}{number of characters per line for y axis labels, see
\code{\link[scales:label_wrap]{scales::label_wrap()}}}

\item{reverse_likert}{if \code{TRUE}, will reverse the default stacking order,
see \code{\link[=position_likert]{position_likert()}}}

\item{width}{bar width, see \code{\link[ggplot2:geom_bar]{ggplot2::geom_bar()}}}
}
\value{
A \code{ggplot2} plot or a \code{tibble}.
}
\description{
\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#experimental}{\figure{lifecycle-experimental.svg}{options: alt='[Experimental]'}}}{\strong{[Experimental]}}
}
\details{
Combines several factor variables using the same list of ordered levels
(e.g. Likert-type scales) into a unique data frame and generates a centered
bar plot.

You could use \code{gglikert_data()} to just produce the dataset to be plotted.
}
\seealso{
\code{\link[=position_likert]{position_likert()}}, \code{\link[=stat_prop]{stat_prop()}}
}
